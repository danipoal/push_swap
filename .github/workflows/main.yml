name: Build and Test C Program with Multiple Runs

on: [push, pull_request]

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Build with make
      run: make re

    - name: Run multiple test combinations and check return codes
      run: |
        set -e

        # Archivo para guardar el resumen final
        summary_file=gh_summary.txt
        echo "# Test Summary" > $summary_file
        echo "" >> $summary_file

        combos=(
          "7 14 21 28 35 42 49 56 63"
          "1 3 5 7 9 11 13 15 17 19"
          "10 20 30 40 50 60 70"
          "2 4 6 8 10 12 14 16 18 20"
          "99 88 77 66 55 44 33 22 11"
          "17 23 29 31 37 41 43 47 53"
          "1001 1002 1003 1004 1005"
          "102 305 607 809 910 1002"
          "11 22 33 44 55 66 77 88 99"
          "901 902 903 904 905 906"
          "123 234 345 456 567 678"
          "31 62 93 124 155 186"
          "3 6 9 12 15 18 21"
          "42 84 126 168 210"
          "75 150 225 300 375"
          "13 26 39 52 65 78"
          "5 25 125 625"
          "1 10 100 1000 10000"
          "333 666 999 1332"
          "77 154 231 308"
          "7 19 34 58 2 81 93 44 13 76 22 67 90 11 26 38 59 99 6 48 72"
          "105 210 315 420 525 630 735 840 945 1050 1155 1260 1365 1470 1575 1680 1785 1890 1995 2100 2205"
          "1 3 7 15 31 63 127 255 511 1023 2047 4095 8191 16383 32767 65535 131071 262143 524287 1048575 2097151"
          "5 10 25 50 75 100 125 150 175 200 225 250 275 300 325 350 375 400 425 450 475"
          "8 16 24 32 40 48 56 64 72 80 88 96 104 112 120 128 136 144 152 160 168 176"
          "-8268 -1314 -6261 -2108 -4190 -2726 640 -7412 -6065 -5519 -7016 -142 -7856 -6052 -9431 -8331 -3914 -5889 -2344 -477 -8960 -4492 -628 -4142 -9322 341 -3343 -4402 -9497 -6466 -2995 -3865 -5631 -7246 -8035 -4852 -3841 -8653 -5807 -8781 -9253 -6054 -1421 -5541 -2552 -7777 -1451 -5998 -6174 -3059 -2148 -6925 -9227 -6 -2672 -4765 -377 -6906 -2882 -5960 -7633 -934 -6259 -1722 -1907 -7407 -1479 -5460 -5425 -7464 -4727 -7862 -9316 -7520 210 -7619 -2536 -7600 -6675 -6581 -4428 370 -234 -3576 -1370 -9893 -8843 363 -6611 -1205 -1136 -9211 769 -2429 -5353 -1117 -1379 -38 -1362 -3174 -7677 -9618 543 -1418 -2734 -6758 -9672 -2134 -1675 -3656 -1045 -1484 -9849 -465 -7198 -908 -8786 -3038 -1288 -9125 -6364 -7146 -5979 -2737 -5101 -7687 -857 -3492 -645 -5691 -5428 -1173 -9190 175 -9561 -3329 206 -9248 -4992 52 607 -5054 797 -1094 -7460 -5851 -8444 -9689 -7003 -4357 -6964 -5265 -1594 -9806 -5573 -7141 214 -914 911 146 785 -8431 -6002 -6034 -6939 -517 -392 -4882 -3482 -7339 -2728 201 487 -4668 -6300 -7843 -3327 -9391 -9091 -3859 -723 -2118 -8249 -5441 -2991 -9934 -7869 -2744 -1040 -366 360 -8409 -540 -4800 -1450 -708 -5670 -45 -53 -5087 -4819 -8859 -1180 -9019 -8319 -5371 -5128 -4753 -5193 -7465 -9929 -8257 -3659 -3568 -1927 -4060 -3833 495 -4442 -8832 -5953 -8199 -3216 -6538 943 -7953 -2547 -700 -9054 -7039 -7038 -710 -5518 -4309 -4338 -4204 -1687 -2380 -5738 -5606 -451 -9602 921 -8436 -6438 -3536 -6854 936 -5299 -83 -32 -6366 -7466 257 -4602 11 -4019 -111 -4892 -5987 -7581 -2070 -4615 -8885 -1519 -8463 476 -1089 -8237 -2553 -2206 -7357 -9380 -5333 -1178 -3043 -7936 -3745 852 -6879 -4905 -7542 -7354 -6032 -9066 -5239 700 -1472 -1651 -4704 -4198 -6831 -1775 550 -2162 -4038 -1325 -9133 -7451 -342 -8044 -3906 -4953 -3331 -3574 -3689 -5637 -4476 -4471 -480 -812 -8195 -2909 -5792 -5257 -9369 -2184 -2756 508 336 -7388 -6802 -1120 -7402 132 -8755 -1677 -5319 455 -9951 -9361 -3107 -6804 -9754 -2521 -1265 -8385 -5073 -4329 110 -1884 794 -1569 -2347 -7004 -5108 -9152 -2723 -4598 -5643 -9150 -4772 -321 -3328 244 -7348 -3654 -3217 -6990 -7551 -1313 -6050 566 -4436 -7540 -3539 -6974 -3115 -7406 -2528 -5724 448 -5862 -1734 -9020 -4408 -3935 -9726 -3317 -8362 -3593 -9383 -2920 -6688 611 -4432 -994 -8400 -1664 -9101 -805 -7311 -3463 -5104 -8930 -4045 -7181 -4264 -8927 -5468 -7697 -6120 -8514 971 -8572 -3334 -6553 -9174 124 -9129 -830 -7760 535 736 -5434 -3986 -609 7 -8867 -4735 -1908 650 581 -7752 -2149 -8844 822 -4030 -8322 -1225 -7501 -2542 907 -7001 -4140 -8053 -5713 -2192 612 -685 -9005 -6572 -4049 -1876 -7657 -895 -9406 -6583 763 725 -2565 -2516 -552 -8175 -7837 -6009 -1490 -2030 -3987 -811 -2502 -5531 -7209 -9470 -3557 -9318 -2769 -5574 -448 -8525 -3887 -1817 -3766 -481 -5618 267 -5731 -2396 184 -7409 -4381 -7114 -6653 71 -6194 -2651 -15 -2932 -2276 -9768 -7057 -7958 -9205 -7441 37 -6746 -2531 -9910 -7455 -9688"
          "-422059 295057 172723 -42154 -124321 -456398 441888 -149695 -489798 14349 140900 105664 -354575 327629 305617 -356047 -349585 472822 445331 -350429 -409484 483986 239960 -61389 162087 303640 -241626 379363 117856 204493 -290430 441971 -372292 70042 -297349 -112466 329464 112202 6397 352888 -279375 -336098 303178 -107242 -267537 364126 475606 -214067 -207604 -301559 497870 -273990 -334107 98518 -172521 440359 257355 22415 476358 219322 137569 -6354 -169026 239139 20038 188250 -111455 -152254 86483 279825 -27106 4656 -145150 -272650 213818 -411850 98275 1174 72543 -5815 255690 71705 -279461 291404 -481654 321194 -479218 16024 -132954 193825 424102 -411908 -404922 422124 396609 166031 -154771 285817 375146 -137759 -377124 397800 180643 6692 82748 336955 351018 -345493 -14361 -374007 94676 -169605 432541 -380084 29011 87487 -22146 -495064 237628 466969 495054 -300936 -441196 457903 180026 160540 33839 -36892 -441802 472684 405171 24071 151902 -471787 -443331 -49184 -155780 -186650 -295599 -225843 202991 -295325 -410097 -7405 117854 -141974 -271739 -398152 -224385 416637 392554 -324704 -102432 -351846 430444 111575 -450129 -443760 469620 292553 -234159 255817 337618 -480600 -496903 348370 -451020 303357 119916 -243511 -351475 -306857 115656 280066 167211 -225159 151263 -246554 449353 -45048 -342145 197931 -20152 234728 -455482 -268639 -44569 -90900 -320414 354352 286491 477820 -384819 -19319 198732 117375 352716 308420 328828 431748"
          "-107832 -374600 -59809 282898 355257 301169 118289 -312359 212343 -398844 -360033 -119954 108348 269079 -369905 -158841 -414589 93934 -72536 205523 -449214 358131 -110188 -414554 489016 -112515 160268 -376361 -82385 -5823 -489036 483061 -386703 409366 458022 77752 160077 -87623 -180325 66129 -117647 -117869 334614 -489377 382801 365573 -360672 -379929 -378712 -359078 -264122 -120558 289803 -398116 -65450 360069 -365767 336712 321866 -96236 -184533 -325444 -355174 -281847 45180 127820 178307 211876 -147469 -384605 -311396 -466502 107179 297443 198834 -440698 301394 -97052 222631 -288239 485617 -171494 -45206 171888 -328521 -364802 -12781 240152 487160 267616 -287810 284454 74013 -471515 424328 409219 204356 -247347 -216977 167935 255207 325101 -18216 448831 358825 134107 376995 451117 -199190 446930 184448 265744 354618 -488283 333989 -241280 260174 42220 -120729 294127 -89289 -263504 59575 28768 -141131 336271 -124534 346754 251589 326937 357986 371127 263670 267727 -338814 49731 26821 -199854 -20802 284006 -235556 42077 -463006 424899 314660 -74424 107151 -6332 440025 -187070 -44833 -175283 296357 372325 200787 -303572 -120808 365144 475949 402683 -388358 -125864 -482844 -198886 367983 31409 387566 135226 -437547 286678 145329 454992 -12233 90725 143906 -28450 103071 -265872 -124845 -291481 -495261 228494 470495 -194076 264217 235494 404311 -240064 17415 -446175 -282292 -158203 -19120 -259182 23839 449162 485771 2183 330995 140991"
          )

        for args in "${combos[@]}"; do
          echo "🟡 Running with args: $args"

          num_args=$(wc -w <<< "$args")

          # Ejecutamos el programa y capturamos la salida
          output=$(./a.out $args)
          code=$?

          num_lines=$(wc -l <<< "$output")

          # Mostrar en consola
          echo "✅ Num count: $num_args"
          echo "📝 movements : $num_lines"

          # Agregar al resumen
          echo "## Args: \`$args\`" >> $summary_file
          echo "- Number of arguments: **$num_args**" >> $summary_file
          echo "- Lines printed: **$num_lines**" >> $summary_file
          echo "" >> $summary_file

          if [ $code -eq 1 ]; then
            echo "❌ Failure with args: $args"
            exit 1
          elif [ $code -ne 0 ]; then
            echo "⚠️ Unexpected return code $code with args: $args"
            exit 1
          fi
        done

        # Añadir el resumen al job (se verá en GitHub Actions UI → Summary)
        echo "### ✅ Test completed successfully" >> $summary_file
        echo "" >> $summary_file
        cat $summary_file >> $GITHUB_STEP_SUMMARY
