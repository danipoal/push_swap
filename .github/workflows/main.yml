name: Build and Test C Program with Multiple Runs

on: [push, pull_request]

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Build with make
      run: make re

    - name: Run multiple test combinations and check return codes
      run: |
        set -e

        # Archivo para guardar el resumen final
        summary_file=gh_summary.txt
        echo "# Test Summary" > $summary_file
        echo "" >> $summary_file

        combos=(
          "7 14 21 28 35 42 49 56 63"
          "1 3 5 7 9 11 13 15 17 19"
          "10 20 30 40 50 60 70"
          "2 4 6 8 10 12 14 16 18 20"
          "99 88 77 66 55 44 33 22 11"
          "17 23 29 31 37 41 43 47 53"
          "1001 1002 1003 1004 1005"
          "102 305 607 809 910 1002"
          "11 22 33 44 55 66 77 88 99"
          "901 902 903 904 905 906"
          "123 234 345 456 567 678"
          "31 62 93 124 155 186"
          "3 6 9 12 15 18 21"
          "42 84 126 168 210"
          "75 150 225 300 375"
          "13 26 39 52 65 78"
          "5 25 125 625"
          "1 10 100 1000 10000"
          "333 666 999 1332"
          "77 154 231 308"
          "7 19 34 58 2 81 93 44 13 76 22 67 90 11 26 38 59 99 6 48 72"
          "105 210 315 420 525 630 735 840 945 1050 1155 1260 1365 1470 1575 1680 1785 1890 1995 2100 2205"
          "8240323 5910987 8641112 2771080 1165232 -465959 2677020 499087 777757 4481069 9576472 4995032 7363534 7069316 3368932 4929090 -102747 8890600 5733547 8877595 294588 764641 9284992 4502521 1254147 4065644 7707200 1292263 9794769 1616210 3947581 2389644 6979125 -905984 7230708 3273899 423219 4780532 2379388 8999171 283552 9701430 5575245 9518507 2896966 8840696 7220908 7521177 2267656 5931902 -794729 -364417 3335854 2041711 9261425 64399 8336665 -808833 5469302 2733501 4630954 -240783 -785553 4328605 4237625 679050 776113 1951429 411366 477337 9779752 1903916 6982985 9147853 9193533 4840243 2278451 8973024 2359404 3607429 4238788 7759020 988453 -840803 7067190 4065741 9162798 4489650 8253408 3066897 5921663 6711930 5084119 8199471 -145668 886347 8886415 4615285 8550984 7964762"
          "6552609 4241820 2597378 -724882 3560949 -871564 3202034 -290036 2529254 1547472 657338 3989167 6789042 9252911 6622132 886876 7357854 1169358 -92265 -499796 7142175 6773546 6181711 4830926 5785016 -813896 9930029 8315104 3886995 4301254 7410659 7103030 5308997 6746962 9449706 9761419 9865786 -552359 6219317 7896546 1812535 2138713 7923699 4144208 6989184 9510624 820582 2266579 1159318 1080520 7710035 2321180 2697491 5281171 1945914 2788358 2880379 201792 1180384 -371304 -877056 1935917 8406693 4096916 5083898 3029731 1180599 -626159 -271594 1108426 6003135 -925055 4332810 9450399 4887531 2840125 563981 7372035 7738185 1365992 1095253 -275330 8793484 -591207 -536855 6808976 7514226 9030234 5661551 -755244 7133291 6714103 4331577 3789196 5999200 2895317 7931014 5361718 2682788 2653182 3500550 1268126 6931297 5346796 8292749 4753194 7605465 3431103 -151482 -998542 1941509 3093413 4177390 2108142 516619 -729185 4930907 2845902 531673 2799627 6102473 4632617 3256183 190422 5921610 4477451 6488221 1818178 4750741 7735309 8602316 7734156 2478012 2673236 771369 5515367 -481300 7681300 -189247 5105395 2032996 3845877 -209643 8508475 964661 9324442 226758 7859979 755260 4472125 2539846 6170926 1350776 6811852 8655828 9959360 -934106 2365077 4666852 7555087 4125850 5946284 698599 2496150 2635035 1727549 5086316 2040525 -830099 1559952 -157381 -721777 1687623 450986 9978568 7097702 -690166 9012770 300727 8686625 4612332 -52006 642812 -778625 6722362 2025062 2173284 9535385 1715146 6925805 1746321 761228 2598510 3875667 555312 1148463 4626515 8018465 5417220 2007467 8555983 4495770 -163074 8354748 3434787 6899963 609042 5163405 5084904 6636807 1976714 1369709 1450267 2512149 5706191 4192758 669499 5269734 8481493 9919672 3017727 -366856 4345373 -882923 6431420 79137 5946018 -207393 9366029 283106 2664761 1890759 8694494 6904493 5777363 4674162 5535867 -715052 4843734 3556732 8553637 3002407 6570371 5820832 4536593 8231463 2215733 3671764 1937144 4701016 855984 6542250 6958211 3373302 362038 8002316 5847164 7100392 6488445 7245644 5828610 5241878 4558676 5955532 6354357 3817175 1553896 3062273 707629 6881242 8920858 4717007 6922404 9000182 969499 8891742 4114584 8110954 6438320 5889849 5569104 5747805 7820447 2383841 7265340 7263902 1172134 1006858 3693791 1112981 6744567 9025736 3099805 6577521 3515632 373149 6748595 6238628 8215647 7247230 69396 578236 7018070 499741 2347135 9619766 3405335 3684303 7734491 6834462 1580568 7892840 4033827 4126631 3653898 6917895 3048978 7116514 1441658 3567214 601882 4718329 4143215 3365395 5555364 7023642 4817879 9837035 9756655 3164899 3349629 2635574 9296058 2611106 5695612 9930100 3175812 9957953 1509750 7081070 9341777 9174679 7281945 7025359 7015695 6912881 3442305 6705296 8882841 1626906 2250715 8146816 223393 5620416 1687693 8387689 595361 6664411 688804 8108597 6629424 1436025 -993723 -810036 3169006 1354309 -770364 4390226 1068142 680637 7317072 1302721 6741699 9468863 5070044 6393431 8716542 7289491 9288568 876882 7863013 2687423 1816829 5898645 7578297 3880344 9921668 6540760 8187979 6002878 5477595 6033050 5339869 -796480 600866 8448617 2888315 9619139 6739922 5282594 6698714 2374547 1311277 8875147 -879798 5884361 1875405 7476203 8094486 -755521 1258331 7360370 1783998 -274944 8148619 4695329 6031676 -749324 1497117 9255108 7082272 767870 5069731 6496993 336555 2153869 1328726 4498946 8007847 6771627 8206542 2815539 935927 1923551 8410594 3043810 -422931 7932985 6625647 110567 3950408 8334747 9971097 291336 6207526 3544647 3206076 9826117 2708681 5214344 7400350 6163761 8664880 2650114 8825500 2622140 3597580 -724593 8792853 6429927 1653098 4550909 6732585 1253185 791393 9137814 598823 2678126 9698311 2540320 9480418 2438338 9955036 5731991 8544401 9353815 5528653 2503992 8775226 2883964 235117 -591065 6796134 1033299 3076480 2725306 1618534 256525 6869041 4563083 6148072 166452 6647330 5593632 2533237 9305500 8027549 6932912 2526477 7971828"
          )

        for args in "${combos[@]}"; do
          echo "🟡 Running with args: $args"

          num_args=$(wc -w <<< "$args")

          # Ejecutamos el programa y capturamos la salida
          output=$(./push_swap $args)
          code=$?

          num_lines=$(wc -l <<< "$output")

          # Mostrar en consola
          echo "✅ Num count: $num_args"
          echo "📝 movements : $num_lines"

          # Agregar al resumen
          echo "## Args: \`$args\`" >> $summary_file
          echo "- Number of arguments: **$num_args**" >> $summary_file
          echo "- Lines printed: **$num_lines**" >> $summary_file
          echo "" >> $summary_file

          if [ $code -eq 1 ]; then
            echo "❌ Failure with args: $args"
            exit 1
          elif [ $code -ne 0 ]; then
            echo "⚠️ Unexpected return code $code with args: $args"
            exit 1
          fi
        done

        # Añadir el resumen al job (se verá en GitHub Actions UI → Summary)
        echo "### ✅ Test completed successfully" >> $summary_file
        echo "" >> $summary_file
        cat $summary_file >> $GITHUB_STEP_SUMMARY
